/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fa2;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Lwandile
 */
public class DecliningBalanceMethod extends javax.swing.JInternalFrame {

    /**
     * Creates new form DecliningBalanceMethod
     */
     int counter=0;
    double results= 0;
    double total = 10000;
    int myInt=0;
    
    public DecliningBalanceMethod() {
        initComponents();
        
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        assetCost = new javax.swing.JLabel();
        resValue = new javax.swing.JLabel();
        usefulLife = new javax.swing.JLabel();
        usefulLife1 = new javax.swing.JLabel();
        assetAmountTxt = new javax.swing.JTextField();
        resTxt = new javax.swing.JTextField();
        usefulLifeTxt = new javax.swing.JTextField();
        rateTxt = new javax.swing.JTextField();
        calcBalance = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultsTxtArea = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(204, 204, 255));
        setTitle("Declining Balance Method");
        setName(""); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 30)); // NOI18N
        jLabel1.setText("Declining Balance Method");

        assetCost.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        assetCost.setText("Cost Amount :");

        resValue.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        resValue.setText("Residual Value :");

        usefulLife.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        usefulLife.setText("Useful Life :");

        usefulLife1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        usefulLife1.setText("Depreciation Rate :");

        calcBalance.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        calcBalance.setText("Calculate");
        calcBalance.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                calcBalanceMouseClicked(evt);
            }
        });
        calcBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcBalanceActionPerformed(evt);
            }
        });

        clear.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        resultsTxtArea.setEditable(false);
        resultsTxtArea.setBackground(new java.awt.Color(255, 255, 153));
        resultsTxtArea.setColumns(20);
        resultsTxtArea.setRows(5);
        jScrollPane1.setViewportView(resultsTxtArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(assetCost, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(resValue, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(usefulLife, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(usefulLife1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(116, 116, 116)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(resTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(usefulLifeTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rateTxt)
                                    .addComponent(assetAmountTxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(calcBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jLabel1)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assetCost)
                    .addComponent(assetAmountTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resValue)
                    .addComponent(resTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usefulLife)
                    .addComponent(usefulLifeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usefulLife1)
                    .addComponent(rateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(calcBalance)
                    .addComponent(clear))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        resultsTxtArea.setText("");
        assetAmountTxt.setText("");
        resTxt.setText("");
        usefulLifeTxt.setText("");
        rateTxt.setText("");
        counter=0;
    }//GEN-LAST:event_clearActionPerformed

    private void calcBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcBalanceActionPerformed

    }//GEN-LAST:event_calcBalanceActionPerformed

    private void calcBalanceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calcBalanceMouseClicked
    double assetAmount = Double.parseDouble(assetAmountTxt.getText());
        double residualValue = Double.parseDouble(resTxt.getText());
        int lifeOfAsset  = Integer.parseInt(usefulLifeTxt.getText());
        double rate = Double.parseDouble(rateTxt.getText());
         //DecimalFormat myformat = new DecimalFormat("###########.00");
        int count = 0;
        while(count < lifeOfAsset)
        {
            counter++;
            if(counter == 1)
            {
               results = rate/100*(assetAmount - residualValue);//2000
               total = (assetAmount - residualValue) - results;//8000
              double roundOff = Math.round(total*100)/100;
              total=roundOff;
            }
            else
            {
                results = rate/100*(total);
                total = total - results;
                double roundOff = Math.round(total*100.0)/100.0;
                total=roundOff;
            }
            
            System.out.println("Value at the end of "+counter+" year(s) R "+total);
            resultsTxtArea.append("Value at the end of "+counter+" year(s) R "+total);
            resultsTxtArea.append("\n");
            count++;
            
            if(assetAmount<=0 || residualValue<=0 )
           {
              
               JOptionPane.showMessageDialog(this, "Please enter numeric values \n Error: ");
           }
        }
    }//GEN-LAST:event_calcBalanceMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField assetAmountTxt;
    private javax.swing.JLabel assetCost;
    private javax.swing.JButton calcBalance;
    private javax.swing.JButton clear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField rateTxt;
    private javax.swing.JTextField resTxt;
    private javax.swing.JLabel resValue;
    private javax.swing.JTextArea resultsTxtArea;
    private javax.swing.JLabel usefulLife;
    private javax.swing.JLabel usefulLife1;
    private javax.swing.JTextField usefulLifeTxt;
    // End of variables declaration//GEN-END:variables
}
