/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bostonemployeemanagementsystem;

import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Lwandile
 */
public class SalaryInformation extends javax.swing.JFrame {
    

    /**
     * Creates new form EmployeeInformation
     */
    public SalaryInformation() {
        initComponents();
        setLocationRelativeTo(null);
        mReadSalary();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtEmployeeID = new javax.swing.JTextField();
        txtFName = new javax.swing.JTextField();
        txtSurname = new javax.swing.JTextField();
        txtDateofBirth = new javax.swing.JTextField();
        txtBasicSalary = new javax.swing.JTextField();
        txtDepartment = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtMedical = new javax.swing.JTextField();
        txtBonus = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnCalculate = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        lblTotalAmount = new javax.swing.JLabel();
        txtTotalOvertime = new javax.swing.JTextField();
        txtOther = new javax.swing.JTextField();
        txtOvertime = new javax.swing.JTextField();
        txtRatePerHour = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Salary Information");
        setLocation(new java.awt.Point(0, 0));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Please enter the amounts: ");

        jLabel2.setText("Employee ID: ");

        jLabel3.setText("First Name:");

        jLabel4.setText("Surname:");

        jLabel5.setText("Date of Birth:");

        jLabel6.setText("Basic Salary:");

        jLabel7.setText("Department:");

        jLabel8.setText("Overtime:");

        jLabel9.setText("Medical:");

        jLabel10.setText("Bonus:");

        jLabel11.setText("Other:");

        jLabel12.setText("Total Overtime:");

        jLabel13.setText("Rate Per Hour:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel14.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel14.setText("Total Amount:");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCalculate.setText("Calculate ");
        btnCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        lblTotalAmount.setText("0.00");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtSurname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtDateofBirth, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtBasicSalary, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtDepartment, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(80, 80, 80)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel9))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtOvertime, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMedical, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtBonus, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtOther, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(36, 36, 36)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel12))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 701, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtRatePerHour, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnCalculate, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel14)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblTotalAmount))
                                .addComponent(txtTotalOvertime, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(46, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtFName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(txtOvertime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTotalOvertime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(txtSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDateofBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(17, 17, 17))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMedical, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(txtRatePerHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBonus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(9, 9, 9)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtOther, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(54, 54, 54))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtBasicSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(26, 26, 26))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(lblTotalAmount))
                        .addGap(3, 3, 3)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnCalculate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnClear))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jMenu1.setText("File");

        jMenuItem1.setText("Employee Information");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

//Declaring all used Variables
    Boolean boolRecordExists = false;
    Boolean boolCreate = false;
    int inEmployeeID;
    String strFName;
    String strSurname;
    String strbdate;
    int intBasicSalary;
    String strDepartment;
    int intOverTime;
    int intMedical;
    int intBonus;
    int intOther;
    Double TotalOvertime;
    int intRatePerHour;

//getting the inserted values from Graphic User Interface
    private void mGetValuesFromGUI() {
        inEmployeeID = Integer.parseInt(txtEmployeeID.getText());
        strFName = txtFName.getText();
        strSurname = txtSurname.getText();
        strbdate = txtDateofBirth.getText();
        intBasicSalary = Integer.parseInt(txtBasicSalary.getText());
        strDepartment = txtDepartment.getText();
        intOverTime = Integer.parseInt(txtOvertime.getText());
        intMedical = Integer.parseInt(txtMedical.getText());
        intBonus = Integer.parseInt(txtBonus.getText());
        intOther = Integer.parseInt(txtOther.getText());
        TotalOvertime = Double.parseDouble(txtTotalOvertime.getText());
        intRatePerHour = Integer.parseInt(txtRatePerHour.getText());

    }

//Checking if employee is already on the database
    private void mcheckIfUserExistinTable() {
        String strDBConnectionString = "jdbc:mysql://localhost:3306/employee";
        String strDBUser = "root";
        String strDBPassword = "Password123.";
        java.sql.Connection conMySQLConnectionString;
        Statement stStatement = null;
        ResultSet rs = null;
        try {
            conMySQLConnectionString = DriverManager.getConnection(strDBConnectionString, strDBUser, strDBPassword);

            stStatement = conMySQLConnectionString.createStatement();

            String strQuery = "Select * from salaryinformation where EmployeeID = '" + inEmployeeID + "' and FirstName='" + strFName + "' and Surname='" + strSurname + "'and DateofBirth= '" + strbdate + "'and BasicSalary='" + intBasicSalary + "'"
                    + "and Department= '" + strDepartment + "'and Overtime='" + intOverTime + "'and Medical='" + intMedical + "'and Bonus='" + intBonus + "'and "
                    + "Other='" + intOther + "'and TotalOverTime='" + TotalOvertime + "'and RatePerHour='" + intRatePerHour + "'";

            stStatement.execute(strQuery);

            rs = stStatement.getResultSet();
            boolRecordExists = rs.next();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                stStatement.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Connection String not Closed" + " " + e);
            }
        }
    }
//load table data from database to the table in GUI

    private void mReadSalary() {
        String strDBConnectionString = "jdbc:mysql://localhost:3306/employee";
        String strDBUser = "root";
        String strDBPassword = "Password123.";
        java.sql.Connection conMySQLConnectionString;
        Statement stStatement = null;
        ResultSet rs = null;

        try {
            conMySQLConnectionString = DriverManager.getConnection(strDBConnectionString, strDBUser, strDBPassword);

            stStatement = conMySQLConnectionString.createStatement();

            String strQuery = "Select * FROM salaryinformation";

            rs = stStatement.executeQuery(strQuery);
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

//Inserting values into the database
    private void mAddSalary() {
        java.sql.Connection conMySQLConnectionString = null;
        String URL = "jdbc:mysql://localhost:3306/employee";
        String User = "root";
        String Password = "Password123.";

        try {

            conMySQLConnectionString = DriverManager.getConnection(URL, User, Password);
            Statement myStatement = conMySQLConnectionString.createStatement();
            String sqlinsert = "insert into salaryinformation(EmployeeID,FirstName,Surname,DateOfBirth,BasicSalary,Department,OverTime,Medical,Bonus,Other,TotalOverTime,RatePerHour)"
                    + "values('" + inEmployeeID + "','" + strFName + "','" + strSurname + "','" + strbdate + "','" + intBasicSalary + "','" + strDepartment + "',"
                    + "'" + intOverTime + "','" + intMedical + "','" + intBonus + "','" + intOther + "','" + TotalOvertime + "','" + intRatePerHour + "')";
            myStatement.execute(sqlinsert);
            myStatement.close();
            JOptionPane.showMessageDialog(null, "Data added successfully");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void mClear() {
        txtBonus.setText("");
        txtBasicSalary.setText("");
        txtDateofBirth.setText("");
        txtDepartment.setText("");
        txtEmployeeID.setText("");
        txtFName.setText("");
        txtMedical.setText("");
        txtTotalOvertime.setText("");
        txtOvertime.setText("");
        txtRatePerHour.setText("");
        txtSurname.setText("");
        txtTotalOvertime.setText("");
        txtOther.setText("");
    }

    private void btnCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateActionPerformed
//Getting values from the text fields and perfoming Total Amount calculations 

        Double TotalAmount;
        Double BasicSalary = Double.parseDouble(txtBasicSalary.getText());
        Double Medical = Double.parseDouble(txtMedical.getText());
        Double OverTime = Double.parseDouble(txtOvertime.getText());
        Double Bonus = Double.parseDouble(txtBonus.getText());
        Double Other = Double.parseDouble(txtOther.getText());
        Double TotalOverTime;
        Double RatePerHour = Double.parseDouble(txtRatePerHour.getText());

        TotalOverTime = OverTime * RatePerHour;
        txtTotalOvertime.setText(TotalOverTime + " ");
        TotalAmount = (BasicSalary + Bonus + Other + TotalOverTime) - Medical;

        lblTotalAmount.setText(TotalAmount + " ");
    }//GEN-LAST:event_btnCalculateActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
//Calling the Employee Information form    

        EmployeeInformation EI = new EmployeeInformation();
        EI.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
// Terminate the current window 
        int confirmed = JOptionPane.showConfirmDialog(null, "Exit Program?", "EXIT", JOptionPane.YES_NO_OPTION);
        if (confirmed == JOptionPane.YES_OPTION) {
            dispose();
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
// Clearing the text fields
        txtBonus.setText("");
        txtBasicSalary.setText("");
        txtDateofBirth.setText("");
        txtDepartment.setText("");
        txtEmployeeID.setText("");
        txtFName.setText("");
        txtMedical.setText("");
        txtTotalOvertime.setText("");
        txtOvertime.setText("");
        txtRatePerHour.setText("");
        txtSurname.setText("");
        txtTotalOvertime.setText("");
        txtOther.setText("");

    }//GEN-LAST:event_btnClearActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
// writing the data to the mySQL table
        boolCreate = true;

        if (boolCreate == true) {

            if (txtEmployeeID.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "The field can not be left empty");
                txtEmployeeID.requestFocusInWindow();
            } else if (txtFName.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "The field can not be left empty");
                txtFName.requestFocusInWindow();
            } else if (txtSurname.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "The field can not be left empty");
                txtSurname.requestFocusInWindow();
            } else if (txtDateofBirth.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "The field can not be left empty");
                txtDateofBirth.requestFocusInWindow();
            } else if (txtBasicSalary.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "The field can not be left empty");
                txtBasicSalary.requestFocusInWindow();
            } else if (txtDepartment.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "The field can not be left empty");
                txtDepartment.requestFocusInWindow();
            } else if (txtOvertime.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "The field can not be left empty");
                txtOvertime.requestFocusInWindow();
            } else if (txtMedical.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "The field can not be left empty");
                txtMedical.requestFocusInWindow();
            } else if (txtBonus.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "The field can not be left empty");
                txtBonus.requestFocusInWindow();
            } else if (txtOther.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "The field can not be left empty");
                txtOther.requestFocusInWindow();
            } else if (txtTotalOvertime.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "The field can not be left empty");
                txtTotalOvertime.requestFocusInWindow();
            } else if (txtRatePerHour.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "The field can not be left empty");
                txtRatePerHour.requestFocusInWindow();
            } else {
                mGetValuesFromGUI();
                mcheckIfUserExistinTable();

                if (boolRecordExists == true) {

                    boolRecordExists = false;
                    JOptionPane.showMessageDialog(null, "Already registered");
                } else if (boolRecordExists == false) {
                    boolCreate = false;
                    mAddSalary();
                    mReadSalary();
                    mClear();

                }
            }

        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
// Calling selected row
        int number = jTable1.getSelectedRow();
        
//Populating the text fields
        txtEmployeeID.setText(jTable1.getValueAt(number, 0).toString());
        txtFName.setText(jTable1.getValueAt(number, 1).toString());
        txtSurname.setText(jTable1.getValueAt(number, 2).toString());
        txtDateofBirth.setText(jTable1.getValueAt(number, 3).toString());
        txtBasicSalary.setText(jTable1.getValueAt(number, 4).toString());
        txtDepartment.setText(jTable1.getValueAt(number, 5).toString());
        txtOvertime.setText(jTable1.getValueAt(number, 6).toString());
        txtMedical.setText(jTable1.getValueAt(number, 7).toString());
        txtBonus.setText(jTable1.getValueAt(number, 8).toString());
        txtOther.setText(jTable1.getValueAt(number, 9).toString());
        txtTotalOvertime.setText(jTable1.getValueAt(number, 10).toString());
        txtRatePerHour.setText(jTable1.getValueAt(number, 11).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SalaryInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SalaryInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SalaryInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SalaryInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SalaryInformation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalculate;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblTotalAmount;
    private javax.swing.JTextField txtBasicSalary;
    private javax.swing.JTextField txtBonus;
    private javax.swing.JTextField txtDateofBirth;
    private javax.swing.JTextField txtDepartment;
    private javax.swing.JTextField txtEmployeeID;
    private javax.swing.JTextField txtFName;
    private javax.swing.JTextField txtMedical;
    private javax.swing.JTextField txtOther;
    private javax.swing.JTextField txtOvertime;
    private javax.swing.JTextField txtRatePerHour;
    private javax.swing.JTextField txtSurname;
    private javax.swing.JTextField txtTotalOvertime;
    // End of variables declaration//GEN-END:variables
}
