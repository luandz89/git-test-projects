/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bostonemployeemanagementsystem;

import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.logging.Level;




/**
 *
 * @author Lwandile
 */
public class EmployeeInformation extends javax.swing.JFrame {

    /**
     * Creates new form SalaryInformation
     */
    public EmployeeInformation() {
        initComponents();
        setLocationRelativeTo(null);
          
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("employee?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        employeeinformation_1Query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT e FROM Employeeinformation_1 e");
        employeeinformation_1List = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : employeeinformation_1Query.getResultList();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        txtJobTitle = new javax.swing.JTextField();
        txtDepartment = new javax.swing.JTextField();
        txtDateofBirth = new javax.swing.JTextField();
        txtPhoneNumber = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnDeleteAll = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Employee Management System: Admin Portal");
        setLocation(new java.awt.Point(0, 0));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Employee Management System: Admin Portal");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("Employee Information");

        jLabel3.setText("First Name:");

        jLabel4.setText("Last Name:");

        jLabel5.setText("Job Title:");

        jLabel6.setText("Department:");

        jLabel7.setText("Date of Birth:");

        jLabel8.setText("Phone Number:");

        jLabel9.setText("Username:");

        jLabel10.setText("Password:");

        txtPhoneNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPhoneNumberKeyPressed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel11.setText("Commands:");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnDeleteAll.setText("Delete All");
        btnDeleteAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteAllActionPerformed(evt);
            }
        });

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnCancel.setText("Clear all");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, employeeinformation_1List, jTable2);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${username}"));
        columnBinding.setColumnName("Username");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${firstName}"));
        columnBinding.setColumnName("First Name");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${lastName}"));
        columnBinding.setColumnName("Last Name");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${jobTitle}"));
        columnBinding.setColumnName("Job Title");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${department}"));
        columnBinding.setColumnName("Department");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dateofBirth}"));
        columnBinding.setColumnName("Dateof Birth");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${phoneNumber}"));
        columnBinding.setColumnName("Phone Number");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${password}"));
        columnBinding.setColumnName("Password");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();

        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPassword)
                            .addComponent(txtUsername, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPhoneNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDateofBirth, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDepartment, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtJobTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnAdd)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnRefresh)))
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdate)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete)
                                .addGap(18, 18, 18)
                                .addComponent(btnDeleteAll)
                                .addGap(18, 18, 18)
                                .addComponent(btnCancel))
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtJobTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDateofBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAdd)
                        .addComponent(btnDeleteAll)
                        .addComponent(btnRefresh)
                        .addComponent(btnCancel)
                        .addComponent(btnUpdate)
                        .addComponent(btnDelete))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jMenu1.setText("Menu");

        jMenuItem1.setText("Salary Information");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
//Declaring all used Variables
Boolean boolRecordExists = false;
Boolean boolCreate = false;
String strFname;
String strLname;
String strJobTitle;
String strDepartment;
String strbdate;
int intphonenumber;
String strUsername;
String strPassword;

//Method to Update Employee

private void mUpdateEmployee()
    {
        java.sql.Connection conMySQLConnectionString = null;
        String URL =  "jdbc:mysql://localhost:3306/employee";
        String User = "root";
        String Password= "Password123.";
        
        try
        {
            
           conMySQLConnectionString = DriverManager.getConnection(URL,User,Password);
           Statement myStatement=conMySQLConnectionString.createStatement();
           String sqlupdate = "Update employeeinformation SET FirstName='"+strFname+"',LastName='"+strLname+"',JobTitle='"+strJobTitle+"',Department='"+strDepartment+"',DateOfBirth='"+strbdate+"',PhoneNumber='"+intphonenumber+"',Password='"+strPassword+"' WHERE Username='"+strUsername+"'";
           
           myStatement.execute(sqlupdate);
           myStatement.close();
           
           JOptionPane.showMessageDialog(null, "Employee data updated successfully");
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }  

//getting the inserted values from Graphic User Interface

private void mGetValuesFromGUI()
{
strFname = txtName.getText();
strLname = txtLastName.getText();
strJobTitle = txtJobTitle.getText();
strDepartment = txtDepartment.getText();
strbdate = txtDateofBirth.getText();
intphonenumber = Integer.parseInt( txtPhoneNumber.getText());
strUsername = txtUsername.getText();
strPassword = txtPassword.getText();
}

//inserting values into the database table

private void mRegisterEmployee()
{
java.sql.Connection conMySQLConnectionString = null;
String URL = "jdbc:mysql://localhost:3306/employee";
String User = "root";
String Password= "Password123.";
try
{
    conMySQLConnectionString = DriverManager.getConnection(URL,User,Password);
    Statement myStatement=conMySQLConnectionString.createStatement();
    String sqlinsert = "insert into employeeinformation(FirstName,LastName,JobTitle,Department,DateOfBirth,PhoneNumber,Username,password)"+
    "values('"+strFname+"','"+strLname+"','"+strJobTitle+"','"+strDepartment+"','"+strbdate+"','"+intphonenumber+"','"+strUsername+"','"+strPassword+"')";
    myStatement.execute(sqlinsert);
    myStatement.close();
    JOptionPane.showMessageDialog(null, "Employee added successfully");
}
catch(Exception e)
{
    JOptionPane.showMessageDialog(null, e);
}
}
   

//Checking if record is already on the database
private void mcheckIfUserExistinTable()
{
String strDBConnectionString = "jdbc:mysql://localhost:3306/employee";
String strDBUser = "root";
String strDBPassword= "Password123.";
java.sql.Connection conMySQLConnectionString;
Statement stStatement = null;
ResultSet rs= null;
try
{
    conMySQLConnectionString = DriverManager.getConnection(strDBConnectionString, strDBUser, strDBPassword);
    stStatement = conMySQLConnectionString.createStatement();
    String strQuery = "Select * from employeeinformation where FirstName='"+strFname+"' and LastName='" +strLname+"'and JobTitle= '"+strJobTitle+"'and Department= '"+strDepartment+"'and DateOfBirth='"+strbdate+"'"
    + "and PhoneNumber='"+intphonenumber+"'and Username='"+strUsername+"'and Password='"+strPassword+"'";
    stStatement.execute(strQuery);
    rs = stStatement.getResultSet();
    boolRecordExists = rs.next();
}catch (Exception e){
JOptionPane.showMessageDialog(null, e);
}finally
{
try{
    stStatement.close();
}catch (Exception e){
    JOptionPane.showMessageDialog(null, "Connection String not Closed"+ " "+ e);
 
  }
 }
} 

//load data from database to table
private void mLoadEmployee()
{
    String strDBConnectionString = "jdbc:mysql://localhost:3306/employee";
    String strDBUser = "root";
    String strDBPassword = "Password123.";
    java.sql.Connection conMySQLConnectionString;
    Statement stStatement = null;
    ResultSet rs = null;
    
    try
    {
        conMySQLConnectionString = DriverManager.getConnection(strDBConnectionString, strDBUser, strDBPassword);
        
        stStatement = conMySQLConnectionString.createStatement();
        
        String strQuery = "select * FROM employeeinformation";
        
        rs = stStatement.executeQuery(strQuery);
        jTable2.setModel(DbUtils.resultSetToTableModel(rs));
        
        
    }
    catch(Exception e)
    {
        JOptionPane.showMessageDialog(null, e);   
    }
}

// clearing the text fields used to enter data     
 private void mClear() {
     
        txtName.setText("");
        txtLastName.setText("");
        txtJobTitle.setText("");
        txtDepartment.setText("");
        txtDateofBirth.setText("");
        txtPhoneNumber.setText("");
        txtUsername.setText("");
        txtPassword.setText("");
 }
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
    
//Deleting the data per row in SQL 
    PreparedStatement stmt;
    Connection con;
    
    try
    {  
        int row = jTable2.getSelectedRow();
        String name = jTable2.getValueAt(row, 0).toString();
        
        con = DriverManager.getConnection("jdbc:mysql://localhost:3306/employee","root","Password123.");
        
        stmt = con.prepareStatement("delete from employeeinformation where UserName = ? " );
        
        stmt.setString(1, name);
        stmt.executeUpdate();
        
        JOptionPane.showMessageDialog(this, "Row Deleted Successfully.");
        
    }
        
        catch (SQLException ex) {
            java.util.logging.Logger.getLogger(EmployeeInformation.class.getName()).log(Level.SEVERE, null, ex);
        }   
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
//Adding data to sql table via text fields
boolCreate= true;
if(boolCreate==true)
{
if(txtName.getText().equals(""))
{
JOptionPane.showMessageDialog(null, "The field can not be left empty");
txtName.requestFocusInWindow();
}
else if(txtLastName.getText().equals("")){
JOptionPane.showMessageDialog(null, "The field can not be left empty");
txtLastName.requestFocusInWindow();
}
else if(txtJobTitle.getText().equals("")){
JOptionPane.showMessageDialog(null, "The field can not be left empty");
txtJobTitle.requestFocusInWindow();
}
else if(txtDepartment.getText().equals("")){
JOptionPane.showMessageDialog(null, "The field can not be left empty");
txtDepartment.requestFocusInWindow();
}
else if(txtDateofBirth.getText().equals("")){
JOptionPane.showMessageDialog(null, "The field can not be left empty");
txtDateofBirth.requestFocusInWindow();
}
else if(txtPhoneNumber.getText().equals("")){
JOptionPane.showMessageDialog(null, "The field can not be left empty");
txtPhoneNumber.requestFocusInWindow();
}
else if(txtUsername.getText().equals("")){
JOptionPane.showMessageDialog(null, "The field can not be left empty");
txtUsername.requestFocusInWindow();
}
else if(txtPassword.getText().equals("")){
JOptionPane.showMessageDialog(null, "The field can not be left empty");
txtPassword.requestFocusInWindow();
}
else
{
mGetValuesFromGUI();
mcheckIfUserExistinTable();


if(boolRecordExists==true)
{
boolRecordExists=false;
JOptionPane.showMessageDialog(null, "Employee already registered");
}
else if (boolRecordExists==false)
{
boolCreate = false;
mRegisterEmployee();
mClear();


}}}
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
//Refresh the data in GUI     
        mLoadEmployee();
 
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
//calling the selected row
    int number = jTable2.getSelectedRow();
    //Populating text fields
    txtUsername.setText(jTable2.getValueAt(number, 0).toString()); 
    txtName.setText(jTable2.getValueAt(number, 1).toString());
    txtLastName.setText(jTable2.getValueAt(number, 2).toString());    
    txtJobTitle.setText(jTable2.getValueAt(number, 3).toString());  
    txtDepartment.setText(jTable2.getValueAt(number, 4).toString());  
    txtDateofBirth.setText(jTable2.getValueAt(number, 5).toString());  
    txtPhoneNumber.setText(jTable2.getValueAt(number, 6).toString());  
   
    txtPassword.setText(jTable2.getValueAt(number, 7).toString());
    }//GEN-LAST:event_jTable2MouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
// Updating newly captured records
     boolCreate= true;
        
        if(boolCreate==true)
        {
        
        if(txtName.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "The field can not be left empty");
                txtName.requestFocusInWindow();
            }
            else if(txtLastName.getText().equals("")){
                JOptionPane.showMessageDialog(null, "The field can not be left empty");
                txtLastName.requestFocusInWindow();
            }
            else if(txtJobTitle.getText().equals("")){
                JOptionPane.showMessageDialog(null, "The field can not be left empty");
                txtJobTitle.requestFocusInWindow();
            }
            else if(txtDepartment.getText().equals("")){
                JOptionPane.showMessageDialog(null, "The field can not be left empty");
                txtDepartment.requestFocusInWindow();
            }
            else if(txtDateofBirth.getText().equals("")){
                JOptionPane.showMessageDialog(null, "The field can not be left empty");
                txtDateofBirth.requestFocusInWindow();
            }
            else if(txtPhoneNumber.getText().equals("")){
                JOptionPane.showMessageDialog(null, "The field can not be left empty");
                txtPhoneNumber.requestFocusInWindow();
            }
            
            else if(txtName.getText().equals("")){
                JOptionPane.showMessageDialog(null, "The field can not be left empty");
                txtName.requestFocusInWindow();
            }
            else if(txtPassword.getText().equals("")){
                JOptionPane.showMessageDialog(null, "The field can not be left empty");
                txtPassword.requestFocusInWindow();
            }
          
            else
            {
                mGetValuesFromGUI();
                mcheckIfUserExistinTable();

                if(boolRecordExists==true)
                {

                    boolRecordExists=false;
                    JOptionPane.showMessageDialog(null, "Employee already registered");
                }
                else if (boolRecordExists==false)
                {
                    boolCreate = false;
                    mUpdateEmployee();
                   
                  
                }}}
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtPhoneNumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPhoneNumberKeyPressed
//Phone number verification procedure (numeric value)
        
        char c = evt.getKeyChar();
        
       if(Character.isLetter(c)){
//set error message
         JOptionPane.showMessageDialog(null, "Please enter numbers only");
         txtPhoneNumber.setText("");
         txtPhoneNumber.requestFocusInWindow();
       } else
       {
        txtPhoneNumber.setEditable(true);
       }
    }//GEN-LAST:event_txtPhoneNumberKeyPressed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
// clearing the text fields used to capture data
        txtName.setText("");
        txtLastName.setText("");
        txtJobTitle.setText("");
        txtDepartment.setText("");
        txtDateofBirth.setText("");
        txtPhoneNumber.setText("");
        txtUsername.setText("");
        txtPassword.setText("");
        
    }//GEN-LAST:event_btnCancelActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
// Terminate the current window 
        int confirmed = JOptionPane.showConfirmDialog(null, "Exit Program?","EXIT",JOptionPane.YES_NO_OPTION);
        if(confirmed == JOptionPane.YES_OPTION)
        {
            dispose();
        } 
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
//hide current frame and load salary frame
        
    SalaryInformation SI = new SalaryInformation();
    SI.setVisible(true);
    this.setVisible(false);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void btnDeleteAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteAllActionPerformed
    {
        java.sql.Connection conMySQLConnectionString = null;
        String URL = "jdbc:mysql://localhost:3306/employee";
        String User = "root";
        String Password= "Password123.";
try
{
        conMySQLConnectionString = DriverManager.getConnection(URL,User,Password);
        Statement myStatement=conMySQLConnectionString.createStatement();
        myStatement.executeUpdate("TRUNCATE employeeinformation");
        myStatement.close();
        JOptionPane.showMessageDialog(null, "table records cleared successfully");
}
catch(Exception e)
{
        JOptionPane.showMessageDialog(null, e);
}
}
        
    }//GEN-LAST:event_btnDeleteAllActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeInformation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDeleteAll;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnUpdate;
    private java.util.List<bostonemployeemanagementsystem.Employeeinformation_1> employeeinformation_1List;
    private javax.persistence.Query employeeinformation_1Query;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField txtDateofBirth;
    private javax.swing.JTextField txtDepartment;
    private javax.swing.JTextField txtJobTitle;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtUsername;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}

