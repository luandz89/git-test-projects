/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hprxs3b161;


import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author lafmah1
 */
public class TaskScheduler extends javax.swing.JInternalFrame {

    /**
     * Creates new form TaskScheduler
     */
    public TaskScheduler() {
        initComponents();
        
       
        mLoadUser();
        mLoadGUIControls();
       
    }
    
    Boolean boolRecordExists = false;
    Boolean boolCreate = false;
    String strSecurity;
    String strStatus;
    String strClientname;
    String strComplianttype;
    String strNoPeople;
    String strLocation;
    String intCasenumber;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("abcsecurity?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        complainsQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT c FROM Complains c");
        complainsList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : complainsQuery.getResultList();
        jLabel2 = new javax.swing.JLabel();
        cboSecurity = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        cboStatus = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnAllocate = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        txtName = new javax.swing.JTextField();
        txtNoPeople = new javax.swing.JTextField();
        txtComplaintType = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        txtCaseNumber = new javax.swing.JTextField();
        txtLocation = new javax.swing.JTextField();

        jLabel2.setText("Allocate Security");

        jLabel1.setText("Status");

        cboStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Allocated", "Closed", "Open", " " }));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setText("Task Scheduler");

        jLabel4.setText("Location");

        jLabel5.setText("No. of People Involved");

        jLabel6.setText("Complaint Type");

        jLabel7.setText("Client Name");

        btnAllocate.setText("Allocate");
        btnAllocate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAllocateActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, complainsList, jTable1);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${clientName}"));
        columnBinding.setColumnName("Client Name");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${complaintType}"));
        columnBinding.setColumnName("Complaint Type");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${noOfPeople}"));
        columnBinding.setColumnName("No Of People");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${location}"));
        columnBinding.setColumnName("Location");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${time}"));
        columnBinding.setColumnName("Time");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();

        jScrollPane1.setViewportView(jTable1);

        jLabel11.setText("Case Number");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnAllocate)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)
                                .addComponent(jLabel7)
                                .addComponent(jLabel6)
                                .addComponent(jLabel5)
                                .addComponent(jLabel4)
                                .addComponent(jLabel11)))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtLocation, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtNoPeople, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtComplaintType, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtName, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(cboSecurity, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cboStatus, javax.swing.GroupLayout.Alignment.TRAILING, 0, 245, Short.MAX_VALUE)
                                .addComponent(txtCaseNumber))
                            .addComponent(btnSave))
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(151, 151, 151))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cboSecurity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtComplaintType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNoPeople, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCaseNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAllocate)
                    .addComponent(btnSave))
                .addGap(67, 67, 67))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
     
        private void mLoadGUIControls()
      {
          btnSave.setVisible(false);
          
      }
        private void mGetValuesFromGUI()
    {
        strSecurity=cboSecurity.getSelectedItem().toString();
        strStatus =cboStatus.getSelectedItem().toString();
        strClientname = txtName.getText();
        strComplianttype = txtComplaintType.getText();
        strNoPeople = txtNoPeople.getText();
        strLocation =  txtLocation.getText(); 
        intCasenumber = txtCaseNumber.getText();
        
    }
        private void mLoadUser()
    {
        String strDBConnectionString = "jdbc:mysql://localhost:3306/abcsecurity";
        String strDBUser = "root";
        String strDBPassword= "";
        java.sql.Connection conMySQLConnectionString;
        Statement stStatement = null;
        ResultSet rs= null;
        
        try
        {
           conMySQLConnectionString = DriverManager.getConnection(strDBConnectionString, strDBUser, strDBPassword);
           stStatement = conMySQLConnectionString.createStatement();
           String strQuery="Select Name FROM user Where Designation='"+ "Security"+"'";
           stStatement.execute(strQuery);
           rs=stStatement.getResultSet();
           
           while(rs.next())
           {
               cboSecurity.addItem(rs.getString(1));
               
           }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        finally
        {
            try
            {
                stStatement.close();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, "Connection string not closed"+" "+e);
            }
        }}
        
        
        private void mcheckIfItemExistinTable()
    {
        String strDBConnectionString = "jdbc:mysql://localhost:3306/abcsecurity";
        String strDBUser = "root";
        String strDBPassword= "Password";
        java.sql.Connection conMySQLConnectionString;
        Statement stStatement = null;
        ResultSet rs= null;
        try 
        {
           conMySQLConnectionString = DriverManager.getConnection(strDBConnectionString, strDBUser, strDBPassword);
           stStatement = conMySQLConnectionString.createStatement();
           String strQuery = "Select * from tasks where Client_Name='"+strClientname+"' and ComplaintType='"+strComplianttype+"' and NoOfPeople='"+strNoPeople+"'and Location='"+strLocation+"'and Case_Number='"+intCasenumber+"'";
           stStatement.execute(strQuery);
           rs = stStatement.getResultSet();
           boolRecordExists = rs.next();           
                   }catch (Exception e){
                       JOptionPane.showMessageDialog(null, e);
                   }finally {
            try{
            stStatement.close();
            }catch (Exception e){
                       JOptionPane.showMessageDialog(null, "Connection String not Closed"+ " "+ e);
        }
        }
    }
        private void mRegisterTask()
    {
        java.sql.Connection conMySQLConnectionString = null;
        String URL =  "jdbc:mysql://localhost:3306/abcsecurity";
        String User = "root";
        String Password= "Password";
        
        try
        {

           conMySQLConnectionString = DriverManager.getConnection(URL,User,Password);
           Statement myStatement=conMySQLConnectionString.createStatement();
           String sqlinsert = "insert into tasks(AllocatedSecurity,Status,Client_Name,ComplaintType,NoOfPeople,Location,Case_Number)"+"values('"+strSecurity+"','"+strStatus+"','"+strClientname+"','"+strComplianttype+"','"+strNoPeople+"','"+strLocation+"','"+intCasenumber+"')";
           myStatement.execute(sqlinsert);
           myStatement.close();
           JOptionPane.showMessageDialog(null, "Complete");
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }
      private void mClearComboBoxStatus()
    {
        
        cboStatus.setSelectedIndex(0);
    }
       private void mClearTextFields()
    {
      
        txtName.setText("");
        txtComplaintType.setText("");
        txtNoPeople.setText("");
        txtLocation.setText("");
        txtCaseNumber.setText("");
    }

        
    private void btnAllocateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAllocateActionPerformed
       
       boolCreate= true;
       btnSave.setVisible(true);
       
            
    }//GEN-LAST:event_btnAllocateActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
               if(boolCreate==true)
        {
         if(cboSecurity.getSelectedItem().equals(""))
            {
                JOptionPane.showMessageDialog(null, "The field can not be left empty");
                cboSecurity.requestFocusInWindow();
            }
            else if(cboStatus.getSelectedItem().equals("")){
                JOptionPane.showMessageDialog(null, "The field can not be left empty");
                cboStatus.requestFocusInWindow();
            }
            else if(txtName.getText().equals("")){
                JOptionPane.showMessageDialog(null, "The field can not be left empty");
                txtName.requestFocusInWindow();
            }
            else if(txtComplaintType.getText().equals("")){
                JOptionPane.showMessageDialog(null, "The field can not be left empty");
                txtComplaintType.requestFocusInWindow();
            }
            else if(txtNoPeople.getText().equals("")){
                JOptionPane.showMessageDialog(null, "The field can not be left empty");
                txtNoPeople.requestFocusInWindow();
            }
            else if(txtLocation.getText().equals("")){
                JOptionPane.showMessageDialog(null, "The field can not be left empty");
                txtLocation.requestFocusInWindow();
            }
            else if(txtCaseNumber.getText().equals("")){
                JOptionPane.showMessageDialog(null, "The field can not be left empty");
                txtCaseNumber.requestFocusInWindow();
            }
          
            else
            {
                mGetValuesFromGUI();
                mcheckIfItemExistinTable();

                if(boolRecordExists==true)
                {

                    boolRecordExists=false;
                    JOptionPane.showMessageDialog(null, "Already registered");
                }
                else if (boolRecordExists==false)
                {
                    boolCreate = false;
                    mGetValuesFromGUI();
                    mRegisterTask();
                    mLoadGUIControls();
                    mLoadUser();
                    mClearComboBoxStatus();
                    mClearTextFields();
                   
                 
                   
                }}}
    }//GEN-LAST:event_btnSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAllocate;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cboSecurity;
    private javax.swing.JComboBox<String> cboStatus;
    private java.util.List<hprxs3b161.Complains> complainsList;
    private javax.persistence.Query complainsQuery;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtCaseNumber;
    private javax.swing.JTextField txtComplaintType;
    private javax.swing.JTextField txtLocation;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNoPeople;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
